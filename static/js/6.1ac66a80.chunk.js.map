{"version":3,"sources":["../node_modules/@material-ui/core/esm/Typography/Typography.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/icons/Dashboard.js","components/Category/styles.js","components/Category/index.js","pages/Categories/styles.js","pages/Categories/index.js"],"names":["defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","React","props","ref","_props$align","align","classes","className","_props$color","color","component","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","other","_objectWithoutProperties","Component","_extends","clsx","root","concat","capitalize","withStyles","theme","margin","typography","caption","button","overline","srOnly","position","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","name","Card","_props$raised","raised","Paper","elevation","CardContent","_props$component","padding","paddingBottom","_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","useStyles","makeStyles","backgroundImage","textTransform","details","flexDirection","content","justifyContent","alignItems","calc","x","y","window","innerHeight","innerWidth","trans","s","Category","categoryId","useSpring","xys","config","mass","tension","friction","set","aria-label","style","textDecoration","to","div","onMouseMove","clientX","clientY","onMouseLeave","transform","interpolate","typo","FixedButton","styled","Categories","memo","useContext","Context","user","categories","map","category","i","key","roles","length","IconButton"],"mappings":"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","file":"static/js/6.1ac66a80.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z\"\n}), 'Dashboard');\n\nexports.default = _default;","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(() => ({\n\troot: {\n\t\tmargin: '1rem auto',\n\t\twidth: '60%',\n\t\tbackgroundImage: 'white',\n\t\ttextTransform: 'capitalize',\n\t},\n\tdetails: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\twidth: '100%',\n\t},\n\tcontent: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n}));\n","//import react\nimport React from 'react';\n//import materia ui components\nimport { Typography, Card, CardContent } from '@material-ui/core';\n//import use styles\nimport { useStyles } from './styles';\n//router elements\nimport { Link } from 'react-router-dom';\n//import react spring\nimport { useSpring, animated } from 'react-spring';\n\n//variables to calculate x and y position\nconst calc = (x, y) => [\n\t-(y - window.innerHeight / 2) / 20,\n\t(x - window.innerWidth / 2) / 20,\n\t1.1,\n];\nconst trans = (x, y, s) =>\n\t`perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\n//create list of post component and export it\nexport const Category = ({ name, categoryId }) => {\n\t//custom hook from material ui\n\tconst classes = useStyles();\n\t//custom hooks from use spring\n\tconst [props, set] = useSpring(() => ({\n\t\txys: [0, 0, 1],\n\t\tconfig: { mass: 5, tension: 350, friction: 40 },\n\t}));\n\n\treturn (\n\t\t<Link\n\t\t\taria-label='link to category'\n\t\t\tstyle={{ textDecoration: 'none' }}\n\t\t\tto={`/category/${categoryId}`}>\n\t\t\t<animated.div\n\t\t\t\tonMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n\t\t\t\tonMouseLeave={() => set({ xys: [0, 0, 1] })}\n\t\t\t\tstyle={{ transform: props.xys.interpolate(trans) }}>\n\t\t\t\t<Card aria-label='card' className={classes.root}>\n\t\t\t\t\t<div className={classes.details}>\n\t\t\t\t\t\t<CardContent aria-label='card content' className={classes.content}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\taria-label='category name'\n\t\t\t\t\t\t\t\tclassName={classes.typo}\n\t\t\t\t\t\t\t\tcomponent='h2'\n\t\t\t\t\t\t\t\tvariant='h3'>\n\t\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</div>\n\t\t\t\t</Card>\n\t\t\t</animated.div>\n\t\t</Link>\n\t);\n};\n","//import styled component\nimport styled from 'styled-components';\n\n//create fixed button component and export it\nexport const FixedButton = styled.div`\n\tposition: fixed;\n\tbottom: 1%;\n\tright: 1%;\n\tcolor: white;\n\tfont-size: 2rem;\n`;\n","//import react\nimport React, { memo, useContext } from 'react';\n//import category component\nimport { Category } from '../../components/Category';\n//import fixed component\nimport { FixedButton } from './styles';\n//import open button\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n//import icon button component\nimport { IconButton } from '@material-ui/core';\n//import context\nimport { Context } from '../../utils/Context';\n//import link\nimport { Link } from 'react-router-dom';\n\n//create list of post component and export it\nconst Categories = memo(() => {\n\t//use context\n\tconst { user, categories } = useContext(Context);\n\n\treturn (\n\t\t<>\n\t\t\t{/**show the list of categories*/}\n\t\t\t{/**add the flip move effect*/}\n\t\t\t{categories.map((category, i) => (\n\t\t\t\t<Category\n\t\t\t\t\taria-label='category card'\n\t\t\t\t\tkey={i}\n\t\t\t\t\tname={category?.name}\n\t\t\t\t\tcategoryId={category?.name}\n\t\t\t\t/>\n\t\t\t))}\n\t\t\t{/*Display the button for the dash board*/}\n\t\t\t{user?.roles?.length === 2 && (\n\t\t\t\t<Link aria-label='link' to='/dashboard'>\n\t\t\t\t\t<FixedButton>\n\t\t\t\t\t\t<IconButton aria-label='dashboard logo' color='inherit'>\n\t\t\t\t\t\t\t<DashboardIcon aria-label='dashboard logo' />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</FixedButton>\n\t\t\t\t</Link>\n\t\t\t)}\n\t\t</>\n\t);\n});\n\nexport default Categories;\n"],"sourceRoot":""}