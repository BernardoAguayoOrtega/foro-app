{"version":3,"sources":["components/Category/styles.js","components/Category/index.js","pages/Categories/index.js"],"names":["useStyles","makeStyles","root","margin","width","backgroundImage","textTransform","details","display","flexDirection","content","justifyContent","alignItems","calc","x","y","window","innerHeight","innerWidth","trans","s","Category","title","classes","useSpring","xys","config","mass","tension","friction","props","set","aria-label","style","textDecoration","to","div","onMouseMove","clientX","clientY","onMouseLeave","transform","interpolate","Card","className","CardContent","Typography","typo","component","variant","Categories","memo","useState","categories","map","category","i","key"],"mappings":"iMAEaA,EAAYC,aAAW,iBAAO,CAC1CC,KAAM,CACLC,OAAQ,YACRC,MAAO,MACPC,gBAAiB,QACjBC,cAAe,cAEhBC,QAAS,CACRC,QAAS,OACTC,cAAe,SACfL,MAAO,QAERM,QAAS,CACRF,QAAS,OACTG,eAAgB,SAChBC,WAAY,SACZH,cAAe,c,iBCNXI,EAAO,SAACC,EAAGC,GAAJ,MAAU,GACpBA,EAAIC,OAAOC,YAAc,GAAK,IAC/BH,EAAIE,OAAOE,WAAa,GAAK,GAC9B,MAEKC,EAAQ,SAACL,EAAGC,EAAGK,GAAP,2CACiBN,EADjB,wBACkCC,EADlC,sBACiDK,EADjD,MAIDC,EAAW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEpBC,EAAUvB,IAFsB,EAIjBwB,aAAU,iBAAO,CACrCC,IAAK,CAAC,EAAG,EAAG,GACZC,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,QANN,mBAI/BC,EAJ+B,KAIxBC,EAJwB,KAStC,OACC,kBAAC,IAAD,CACCC,aAAW,mBACXC,MAAO,CAAEC,eAAgB,QACzBC,GAAIb,GACJ,kBAAC,IAASc,IAAV,CACCC,YAAa,gBAAYvB,EAAZ,EAAGwB,QAAqBvB,EAAxB,EAAewB,QAAf,OAAgCR,EAAI,CAAEN,IAAKZ,EAAKC,EAAGC,MAChEyB,aAAc,kBAAMT,EAAI,CAAEN,IAAK,CAAC,EAAG,EAAG,MACtCQ,MAAO,CAAEQ,UAAWX,EAAML,IAAIiB,YAAYvB,KAC1C,kBAACwB,EAAA,EAAD,CAAMX,aAAW,OAAOY,UAAWrB,EAAQrB,MAC1C,yBAAK0C,UAAWrB,EAAQhB,SACvB,kBAACsC,EAAA,EAAD,CAAab,aAAW,eAAeY,UAAWrB,EAAQb,SACzD,kBAACoC,EAAA,EAAD,CACCd,aAAW,gBACXY,UAAWrB,EAAQwB,KACnBC,UAAU,KACVC,QAAQ,MACP3B,SCzCH4B,EAAaC,gBAAK,WAAM,MAERC,mBAAS,CAC7B,CAAE9B,MAAO,gBACT,CAAEA,MAAO,mBACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,gBACT,CAAEA,MAAO,sBALH+B,EAFsB,oBAU7B,OACC,oCAGEA,EAAWC,KAAI,SAACC,EAAUC,GAAX,OACf,kBAAC,EAAD,CAAUxB,aAAW,iBAAiByB,IAAKD,EAAGlC,MAAOiC,EAASjC,eAMnD4B","file":"static/js/7.d67a9b39.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(() => ({\n\troot: {\n\t\tmargin: '1rem auto',\n\t\twidth: '60%',\n\t\tbackgroundImage: 'white',\n\t\ttextTransform: 'capitalize',\n\t},\n\tdetails: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\twidth: '100%',\n\t},\n\tcontent: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center',\n\t\talignItems: 'center',\n\t\tflexDirection: 'column',\n\t},\n}));\n","//import react\nimport React from 'react';\n//import materia ui components\nimport { Typography, Card, CardContent } from '@material-ui/core';\n//import use styles\nimport { useStyles } from './styles';\n//router elements\nimport { Link } from 'react-router-dom';\n//import react spring\nimport { useSpring, animated } from 'react-spring';\n\n//variables to calculate x and y position\nconst calc = (x, y) => [\n\t-(y - window.innerHeight / 2) / 20,\n\t(x - window.innerWidth / 2) / 20,\n\t1.1,\n];\nconst trans = (x, y, s) =>\n\t`perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\n//create list of post component and export it\nexport const Category = ({ title }) => {\n\t//custom hook from material ui\n\tconst classes = useStyles();\n\t//custom hooks from use spring\n\tconst [props, set] = useSpring(() => ({\n\t\txys: [0, 0, 1],\n\t\tconfig: { mass: 5, tension: 350, friction: 40 },\n\t}));\n\n\treturn (\n\t\t<Link\n\t\t\taria-label='link to category'\n\t\t\tstyle={{ textDecoration: 'none' }}\n\t\t\tto={title}>\n\t\t\t<animated.div\n\t\t\t\tonMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n\t\t\t\tonMouseLeave={() => set({ xys: [0, 0, 1] })}\n\t\t\t\tstyle={{ transform: props.xys.interpolate(trans) }}>\n\t\t\t\t<Card aria-label='card' className={classes.root}>\n\t\t\t\t\t<div className={classes.details}>\n\t\t\t\t\t\t<CardContent aria-label='card content' className={classes.content}>\n\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\taria-label='category name'\n\t\t\t\t\t\t\t\tclassName={classes.typo}\n\t\t\t\t\t\t\t\tcomponent='h2'\n\t\t\t\t\t\t\t\tvariant='h3'>\n\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t</div>\n\t\t\t\t</Card>\n\t\t\t</animated.div>\n\t\t</Link>\n\t);\n};\n","//import react\nimport React, { useState, memo } from 'react';\n//import category component\nimport { Category } from '../../components/Category';\n\n//create list of post component and export it\nconst Categories = memo(() => {\n\t//use state\n\tconst [categories] = useState([\n\t\t{ title: 'action games' },\n\t\t{ title: 'adventure games' },\n\t\t{ title: 'strategy games' },\n\t\t{ title: 'horror games' },\n\t\t{ title: 'pay to win games' },\n\t]);\n\n\treturn (\n\t\t<>\n\t\t\t{/**show the list of categories*/}\n\t\t\t{/**add the flip move effect*/}\n\t\t\t{categories.map((category, i) => (\n\t\t\t\t<Category aria-label='category catrd' key={i} title={category.title} />\n\t\t\t))}\n\t\t</>\n\t);\n});\n\nexport default Categories;\n"],"sourceRoot":""}