{"version":3,"sources":["components/ListItems/index.js","pages/AdminView/styles.js","components/CreateCategory/styles.js","components/CreateCategory/index.js","components/UpdateCategory/styles.js","components/UpdateCategory/index.js","components/DeleteCategory/styles.js","components/DeleteCategory/index.js","components/AdminUsers/styles.js","components/AdminUsers/index.js","components/ShowCategories/styles.js","components/ShowCategories/index.js","components/DeleteUser/styles.js","components/DeleteUser/index.js","components/UpdateUser/styles.js","components/UpdateUser/index.js","pages/AdminView/index.js"],"names":["MainListItems","setDashboardOption","useContext","Context","ListItem","button","onClick","number","ListItemIcon","ListItemText","primary","Divider","useStyles","makeStyles","theme","root","display","background","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","input","fontSize","margin","marginTop","CreateCategory","classes","categoryName","setCategoryName","createNewCategory","setShowError","setError","Typography","FormGroup","aria-label","Input","autoFocus","placeholder","className","value","onChange","e","target","Alert","Button","variant","color","error","UpdateCategory","updateCategory","categoryId","setCategoryId","DeleteCategory","deleteCategory","maxWidth","backgroundColor","palette","AdminUsers","users","TableContainer","component","Paper","Table","table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","key","_id","scope","name","username","email","minWidth","ShowCategories","useState","rows","setRows","categories","useEffect","DeleteUser","id","setId","deleteUser","UpdateUser","updateUser","setName","userName","setUserName","setEmail","Dashboard","memo","open","setOpen","dashboardOption","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","noWrap","style","textDecoration","to","Drawer","List","Container","ResponseAlert","option","handleSwitch"],"mappings":"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","file":"static/js/9.c9547a28.chunk.js","sourcesContent":["//import react and its hooks\nimport React, { useContext } from 'react';\n//import context\nimport { Context } from '../../utils/Context';\n//import materia ui components and icons\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddIcon from '@material-ui/icons/Add';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Divider from '@material-ui/core/Divider';\nimport PeopleIcon from '@material-ui/icons/People';\n\nexport const MainListItems = () => {\n\tconst { setDashboardOption } = useContext(Context);\n\n\treturn (\n\t\t<>\n\t\t\t{/*item for create a category*/}\n\t\t\t<ListItem\n\t\t\t\tbutton\n\t\t\t\tonClick={() => setDashboardOption((number) => (number = 1))}>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<AddIcon />\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText primary='Create Category' />\n\t\t\t</ListItem>\n\t\t\t{/*item for delete category*/}\n\t\t\t<ListItem\n\t\t\t\tbutton\n\t\t\t\tonClick={() => setDashboardOption((number) => (number = 2))}>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<HighlightOffIcon />\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText primary='Delete Category' />\n\t\t\t</ListItem>\n\t\t\t{/*item for update category*/}\n\t\t\t<ListItem\n\t\t\t\tbutton\n\t\t\t\tonClick={() => setDashboardOption((number) => (number = 3))}>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<UpdateIcon />\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText primary='Update Category' />\n\t\t\t</ListItem>\n\t\t\t<Divider />\n\t\t\t<ListItem\n\t\t\t\tbutton\n\t\t\t\tonClick={() => setDashboardOption((number) => (number = 4))}>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<PeopleIcon />\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText primary='users' />\n\t\t\t</ListItem>\n\t\t</>\n\t);\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tbackground: 'white',\n\t},\n\ttoolbar: {\n\t\tpaddingRight: 24, // keep right padding when drawer closed\n\t},\n\ttoolbarIcon: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end',\n\t\tpadding: '0 8px',\n\t\t...theme.mixins.toolbar,\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t},\n\tappBarShift: {\n\t\tmarginLeft: drawerWidth,\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\tmenuButton: {\n\t\tmarginRight: 36,\n\t},\n\tmenuButtonHidden: {\n\t\tdisplay: 'none',\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n\tdrawerPaper: {\n\t\tposition: 'relative',\n\t\twhiteSpace: 'nowrap',\n\t\twidth: drawerWidth,\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\tdrawerPaperClose: {\n\t\toverflowX: 'hidden',\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t\twidth: theme.spacing(7),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: theme.spacing(9),\n\t\t},\n\t},\n\tappBarSpacer: theme.mixins.toolbar,\n\tcontent: {\n\t\tflexGrow: 1,\n\t\theight: '100vh',\n\t\toverflow: 'auto',\n\t},\n\tcontainer: {\n\t\tpaddingTop: theme.spacing(4),\n\t\tpaddingBottom: theme.spacing(4),\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(2),\n\t\tdisplay: 'flex',\n\t\toverflow: 'auto',\n\t\tflexDirection: 'column',\n\t},\n\tfixedHeight: {\n\t\theight: 240,\n\t},\n}));\n","//import make styles from styed component\nimport { makeStyles } from '@material-ui/core/styles';\n\n//custom styles from the modal component and export it\nexport const useStyles = makeStyles((theme) => ({\n\tinput: {\n\t\tfontSize: '2rem !important',\n\t\tmargin: '1rem 0',\n\t},\n\tbutton: {\n\t\tmarginTop: '1rem !important',\n\t},\n}));\n","//import react and its hooks\nimport React, { useContext } from 'react';\n//import Typography\nimport { Button, FormGroup, Input, Typography } from '@material-ui/core';\n//import context\nimport { Context } from '../../utils/Context';\n//import alert component\nimport { Alert } from '../Alert';\n//import styles\nimport { useStyles } from './styles';\n\n//create and export component\nexport const CreateCategory = () => {\n\t//use custom hooks from material ui\n\tconst classes = useStyles();\n\n\t//use context hooks\n\tconst {\n\t\tcategoryName,\n\t\tsetCategoryName,\n\t\tcreateNewCategory,\n\t\tsetShowError,\n\t\tsetError,\n\t} = useContext(Context);\n\n\t//handle the click event\n\tconst handleOnClick = () => {\n\t\t//set the login\n\t\tsetCategoryName(categoryName);\n\t\t//check if the input is empty\n\t\tif (categoryName === '') {\n\t\t\tsetError((error) => (error = 'please check the inputs'));\n\t\t\tsetShowError(true);\n\t\t} else {\n\t\t\tsetShowError(false);\n\t\t\tcreateNewCategory();\n\t\t}\n\t\t//reset local state\n\t\tsetCategoryName('');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Typography>Create new category</Typography>\n\t\t\t<FormGroup aria-label='form group'>\n\t\t\t\t{/*Inputs (control it)*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the name of the new category'\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tplaceholder='category name'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={categoryName}\n\t\t\t\t\tonChange={(e) => setCategoryName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Alert />\n\t\t\t\t<Button\n\t\t\t\t\taria-label='button to create new category'\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tonClick={handleOnClick}>\n\t\t\t\t\tCreate!\n\t\t\t\t</Button>\n\t\t\t</FormGroup>\n\t\t</>\n\t);\n};\n","//import make styles from styed component\nimport { makeStyles } from '@material-ui/core/styles';\n\n//custom styles from the modal component and export it\nexport const useStyles = makeStyles((theme) => ({\n\tinput: {\n\t\tfontSize: '2rem !important',\n\t\tmargin: '1rem 0',\n\t},\n\tbutton: {\n\t\tmarginTop: '1rem !important',\n\t},\n}));\n","//import react and its hooks\nimport React, { useContext } from 'react';\n//import Typography\nimport { Button, FormGroup, Input, Typography } from '@material-ui/core';\n//import context\nimport { Context } from '../../utils/Context';\n//import alert component\nimport { Alert } from '../Alert';\n//import styles\nimport { useStyles } from './styles';\n\n//create and export component\nexport const UpdateCategory = () => {\n\t//use custom hooks from material ui\n\tconst classes = useStyles();\n\t//use context hooks\n\tconst {\n\t\tcategoryName,\n\t\tsetCategoryName,\n\t\tupdateCategory,\n\t\tsetShowError,\n\t\tsetError,\n\t\tcategoryId,\n\t\tsetCategoryId,\n\t} = useContext(Context);\n\n\t//handle the click event\n\tconst handleOnClick = () => {\n\t\t//set the data\n\t\tsetCategoryId(categoryId);\n\t\tsetCategoryName(categoryName);\n\t\t//check if the input is empty\n\t\tif (categoryName === '' || categoryId === '') {\n\t\t\tsetError((error) => (error = 'please check the inputs'));\n\t\t\tsetShowError(true);\n\t\t} else {\n\t\t\tsetShowError(false);\n\t\t\tupdateCategory();\n\t\t}\n\t\t//reset local state\n\t\tsetCategoryName('');\n\t\tsetCategoryId('');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Typography>Update category</Typography>\n\t\t\t<FormGroup aria-label='form group'>\n\t\t\t\t{/*category id*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the id of the category'\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tplaceholder='category id'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={categoryId}\n\t\t\t\t\tonChange={(e) => setCategoryId(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t{/*category name*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the name of the category'\n\t\t\t\t\tplaceholder='category name'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={categoryName}\n\t\t\t\t\tonChange={(e) => setCategoryName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Alert />\n\t\t\t\t<Button\n\t\t\t\t\taria-label='button to make update'\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tonClick={handleOnClick}>\n\t\t\t\t\tUpdate!\n\t\t\t\t</Button>\n\t\t\t</FormGroup>\n\t\t</>\n\t);\n};\n","//import make styles from styed component\nimport { makeStyles } from '@material-ui/core/styles';\n\n//custom styles from the modal component and export it\nexport const useStyles = makeStyles((theme) => ({\n\tinput: {\n\t\tfontSize: '2rem !important',\n\t\tmargin: '1rem 0',\n\t},\n\tbutton: {\n\t\tmarginTop: '1rem !important',\n\t},\n}));\n","//import react and its hooks\nimport React, { useContext } from 'react';\n//import Typography\nimport { Button, FormGroup, Input, Typography } from '@material-ui/core';\n//import context\nimport { Context } from '../../utils/Context';\n//import alert component\nimport { Alert } from '../Alert';\n//import styles\nimport { useStyles } from './styles';\n\n//create and export component\nexport const DeleteCategory = () => {\n\t//use custom hooks from material ui\n\tconst classes = useStyles();\n\t//use context hooks\n\tconst {\n\t\tdeleteCategory,\n\t\tsetShowError,\n\t\tsetError,\n\t\tcategoryId,\n\t\tsetCategoryId,\n\t} = useContext(Context);\n\n\t//handle the click event\n\tconst handleOnClick = () => {\n\t\t//set the data\n\t\tsetCategoryId(categoryId);\n\t\t//check if the input is empty\n\t\tif (categoryId === '') {\n\t\t\tsetError((error) => (error = 'please check the inputs'));\n\t\t\tsetShowError(true);\n\t\t} else {\n\t\t\tsetShowError(false);\n\t\t\tdeleteCategory();\n\t\t}\n\t\t//reset local state\n\t\tsetCategoryId('');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Typography>Delete category</Typography>\n\t\t\t<FormGroup aria-label='form group'>\n\t\t\t\t{/*category id*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the id of the category'\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tplaceholder='category id'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={categoryId}\n\t\t\t\t\tonChange={(e) => setCategoryId(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Alert />\n\t\t\t\t<Button\n\t\t\t\t\taria-label='button to make update'\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tcolor='secondary'\n\t\t\t\t\tonClick={handleOnClick}>\n\t\t\t\t\tDelete!\n\t\t\t\t</Button>\n\t\t\t</FormGroup>\n\t\t</>\n\t);\n};\n","//import make styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n//create and export the styles\nexport const useStyles = makeStyles((theme) => ({\n\troot: {\n\t\twidth: '100%',\n\t\tmaxWidth: 600,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t},\n}));\n","//import react\nimport React, { useContext } from 'react';\n//import material ui components\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n//import context\nimport { Context } from '../../utils/Context';\n//import styles\nimport { useStyles } from './styles';\n\nexport const AdminUsers = () => {\n\tconst classes = useStyles();\n\t//use context\n\tconst { users } = useContext(Context);\n\n\treturn (\n\t\t<TableContainer component={Paper}>\n\t\t\t<Table className={classes.table} size='small' aria-label='a dense table'>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Name</TableCell>\n\t\t\t\t\t\t<TableCell align='left'>user name</TableCell>\n\t\t\t\t\t\t<TableCell align='left'>email</TableCell>\n\t\t\t\t\t\t<TableCell align='left'>id</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{users.map((row) => (\n\t\t\t\t\t\t<TableRow key={row._id}>\n\t\t\t\t\t\t\t<TableCell component='th' scope='row'>\n\t\t\t\t\t\t\t\t{row.name}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell align='left'>{row.username}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='left'>{row.email}</TableCell>\n\t\t\t\t\t\t\t<TableCell align='left'>{row._id}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n};\n","//import make styles\nimport { makeStyles } from '@material-ui/core/styles';\n\n//export and create the styles\nexport const useStyles = makeStyles({\n\ttable: {\n\t\tminWidth: 650,\n\t},\n});\n","//import react and its hooks\nimport React, { useState, useContext, useEffect } from 'react';\n//import context\nimport { Context } from '../../utils/Context';\n//import material ui components\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n//import styles\nimport { useStyles } from './styles';\n\nexport const ShowCategories = () => {\n\tconst classes = useStyles();\n\n\t//use local state\n\tconst [rows, setRows] = useState([]);\n\n\t//use context\n\tconst { categories } = useContext(Context);\n\n\t//use effect\n\tuseEffect(() => {\n\t\tsetRows(categories);\n\t}, [categories]);\n\n\treturn (\n\t\t<TableContainer component={Paper}>\n\t\t\t<Table className={classes.table} size='small' aria-label='a dense table'>\n\t\t\t\t<TableHead>\n\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t<TableCell>Name</TableCell>\n\t\t\t\t\t\t<TableCell align='left'>Category id</TableCell>\n\t\t\t\t\t</TableRow>\n\t\t\t\t</TableHead>\n\t\t\t\t<TableBody>\n\t\t\t\t\t{rows.map((row) => (\n\t\t\t\t\t\t<TableRow key={row.name}>\n\t\t\t\t\t\t\t<TableCell component='th' scope='row'>\n\t\t\t\t\t\t\t\t{row.name}\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell align='left'>{row._id}</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t))}\n\t\t\t\t</TableBody>\n\t\t\t</Table>\n\t\t</TableContainer>\n\t);\n};\n","//import make styles from styed component\nimport { makeStyles } from '@material-ui/core/styles';\n\n//custom styles from the modal component and export it\nexport const useStyles = makeStyles((theme) => ({\n\tinput: {\n\t\tfontSize: '2rem !important',\n\t\tmargin: '1rem 0',\n\t},\n\tbutton: {\n\t\tmarginTop: '1rem !important',\n\t},\n}));\n","//import react\nimport React, { useContext, useState } from 'react';\n\n//create anx export delete user\n//import Typography\nimport { Button, FormGroup, Input, Typography } from '@material-ui/core';\n//import context\nimport { Context } from '../../utils/Context';\n//import alert component\nimport { Alert } from '../Alert';\n//import styles\nimport { useStyles } from './styles';\n\n//create and export component\nexport const DeleteUser = () => {\n\t//use local state\n\tconst [id, setId] = useState('');\n\t//use custom hooks from material ui\n\tconst classes = useStyles();\n\t//use context hooks\n\tconst { deleteUser, setShowError, setError } = useContext(Context);\n\n\t//handle the click event\n\tconst handleOnClick = () => {\n\t\t//check if the input is empty\n\t\tif (id === '') {\n\t\t\tsetError((error) => (error = 'please check the inputs'));\n\t\t\tsetShowError(true);\n\t\t} else {\n\t\t\tsetShowError(false);\n\t\t\tdeleteUser(id);\n\t\t}\n\t\t//reset local state\n\t\tsetId('');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Typography>Delete user</Typography>\n\t\t\t<FormGroup aria-label='form group'>\n\t\t\t\t{/*category id*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the id of the user'\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tplaceholder='user id'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={id}\n\t\t\t\t\tonChange={(e) => setId(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Alert />\n\t\t\t\t<Button\n\t\t\t\t\taria-label='button to make delete'\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tcolor='secondary'\n\t\t\t\t\tonClick={handleOnClick}>\n\t\t\t\t\tDelete!\n\t\t\t\t</Button>\n\t\t\t</FormGroup>\n\t\t</>\n\t);\n};\n","//import make styles from styed component\nimport { makeStyles } from '@material-ui/core/styles';\n\n//custom styles from the modal component and export it\nexport const useStyles = makeStyles((theme) => ({\n\tinput: {\n\t\tfontSize: '2rem !important',\n\t\tmargin: '1rem 0',\n\t},\n\tbutton: {\n\t\tmarginTop: '1rem !important',\n\t},\n}));\n","//import react and its hooks\nimport React, { useContext, useState } from 'react';\n//import Typography\nimport { Button, FormGroup, Input, Typography } from '@material-ui/core';\n//import context\nimport { Context } from '../../utils/Context';\n//import alert component\nimport { Alert } from '../Alert';\n//import styles\nimport { useStyles } from './styles';\n\n//create and export component\nexport const UpdateUser = () => {\n\t//use custom hooks from material ui\n\tconst classes = useStyles();\n\t//use context hooks\n\tconst { setShowError, setError, updateUser } = useContext(Context);\n\t//local state\n\tconst [id, setId] = useState('');\n\tconst [name, setName] = useState('');\n\tconst [userName, setUserName] = useState('');\n\tconst [email, setEmail] = useState('');\n\n\t//handle the click event\n\tconst handleOnClick = () => {\n\t\t//check if the input is empty\n\t\tif (id === '' || name === '' || userName === '' || email === '') {\n\t\t\tsetError((error) => (error = 'please check the inputs'));\n\t\t\tsetShowError(true);\n\t\t} else {\n\t\t\tsetShowError(false);\n\t\t\tupdateUser(id, { name, userName, email });\n\t\t}\n\t\t//reset local state\n\t\tsetId('');\n\t\tsetName('');\n\t\tsetUserName('');\n\t\tsetEmail('');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Typography>Update user</Typography>\n\t\t\t<FormGroup aria-label='form group'>\n\t\t\t\t{/*category id*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the id of the category'\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tplaceholder='user id'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={id}\n\t\t\t\t\tonChange={(e) => setId(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t{/*user name*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the name of the user'\n\t\t\t\t\tplaceholder='name'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t{/*user user name*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the user name of the user'\n\t\t\t\t\tplaceholder='userName'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={userName}\n\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t{/*user name*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the name of the user'\n\t\t\t\t\tplaceholder='email'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={email}\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Alert />\n\t\t\t\t<Button\n\t\t\t\t\taria-label='button to make update'\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tonClick={handleOnClick}>\n\t\t\t\t\tUpdate!\n\t\t\t\t</Button>\n\t\t\t</FormGroup>\n\t\t</>\n\t);\n};\n","//import react and its hooks\nimport React, { useContext, useState, memo } from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n//import drawer\nimport Drawer from '@material-ui/core/Drawer';\n//import app bar\nimport AppBar from '@material-ui/core/AppBar';\n//import toolbar\nimport Toolbar from '@material-ui/core/Toolbar';\n//import list\nimport List from '@material-ui/core/List';\n//import typo\nimport Typography from '@material-ui/core/Typography';\n//import divider\nimport Divider from '@material-ui/core/Divider';\n//import icon button\nimport IconButton from '@material-ui/core/IconButton';\n//import container\nimport Container from '@material-ui/core/Container';\n//import menu icon\nimport MenuIcon from '@material-ui/icons/Menu';\n//import chevron left icon\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n//import list of items\nimport { MainListItems } from '../../components/ListItems';\n//import styles\nimport { useStyles } from './styles';\n//import create category component\nimport { CreateCategory } from '../../components/CreateCategory';\n//import paper\nimport { Paper } from '@material-ui/core';\n//import the context\nimport { Context } from '../../utils/Context';\n//import response alert\nimport { ResponseAlert } from '../../components/ResponseAlert';\n//import update category component\nimport { UpdateCategory } from '../../components/UpdateCategory';\n//import delete category\nimport { DeleteCategory } from '../../components/DeleteCategory';\n//import link\nimport { Link } from 'react-router-dom';\n//import admin users\nimport { AdminUsers } from '../../components/AdminUsers';\n//import show categories\nimport { ShowCategories } from '../../components/ShowCategories';\n//import delete user\nimport { DeleteUser } from '../../components/DeleteUser';\n//import update user\nimport { UpdateUser } from '../../components/UpdateUser';\n\nexport const Dashboard = memo(() => {\n\t//use styles\n\tconst classes = useStyles();\n\t//use local style\n\tconst [open, setOpen] = useState(true);\n\t//use context\n\tconst { dashboardOption } = useContext(Context);\n\n\t//handle the open of the menu\n\tconst handleDrawerOpen = () => {\n\t\tsetOpen(true);\n\t};\n\t//handle the close of the menu\n\tconst handleDrawerClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\t//handle the switch\n\t/**\n\t * @description this function allow to handle the component to display\n\t * @param {number} option\n\t */\n\tconst handleSwitch = (option) => {\n\t\tswitch (option) {\n\t\t\tcase 1:\n\t\t\t\treturn <CreateCategory />;\n\t\t\tcase 2:\n\t\t\t\treturn <DeleteCategory />;\n\t\t\tcase 3:\n\t\t\t\treturn <UpdateCategory />;\n\t\t\tcase 4:\n\t\t\t\treturn <AdminUsers />;\n\t\t\tdefault:\n\t\t\t\treturn <></>;\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t{/**base styles*/}\n\t\t\t<CssBaseline />\n\t\t\t{/** app bar*/}\n\t\t\t<AppBar\n\t\t\t\tposition='absolute'\n\t\t\t\tclassName={clsx(classes.appBar, open && classes.appBarShift)}>\n\t\t\t\t{/**tool bar */}\n\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\taria-label='open drawer'\n\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\tclasses.menuButton,\n\t\t\t\t\t\t\topen && classes.menuButtonHidden,\n\t\t\t\t\t\t)}>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t{/**typography */}\n\t\t\t\t\t<Typography\n\t\t\t\t\t\taria-label='text of nav bar'\n\t\t\t\t\t\tcomponent='h1'\n\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\tnoWrap\n\t\t\t\t\t\tclassName={classes.title}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\taria-label='link to back to home'\n\t\t\t\t\t\t\tstyle={{ textDecoration: 'none', color: 'inherit' }}\n\t\t\t\t\t\t\tto='/'>\n\t\t\t\t\t\t\tDashboard Foro App\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t{/** drawer fot the menu*/}\n\t\t\t<Drawer\n\t\t\t\tvariant='permanent'\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n\t\t\t\t}}\n\t\t\t\topen={open}>\n\t\t\t\t<div className={classes.toolbarIcon}>\n\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t\t<ChevronLeftIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t\t<Divider />\n\t\t\t\t<List>\n\t\t\t\t\t<MainListItems />\n\t\t\t\t</List>\n\t\t\t\t<Divider />\n\t\t\t</Drawer>\n\t\t\t{/**main content*/}\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.appBarSpacer} />\n\t\t\t\t{/**container */}\n\t\t\t\t<Container\n\t\t\t\t\taria-label='Container'\n\t\t\t\t\tmaxWidth='lg'\n\t\t\t\t\tclassName={classes.container}>\n\t\t\t\t\t<ResponseAlert />\n\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t<ShowCategories />\n\t\t\t\t\t</Paper>\n\t\t\t\t\t{/**switch to handle the component ti display it */}\n\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t{handleSwitch(dashboardOption)}\n\t\t\t\t\t</Paper>\n\t\t\t\t\t{dashboardOption === 4 && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<UpdateUser />\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t\t<DeleteUser />\n\t\t\t\t\t\t\t</Paper>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t</div>\n\t);\n});\n\nexport default Dashboard;\n"],"sourceRoot":""}