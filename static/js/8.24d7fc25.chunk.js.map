{"version":3,"sources":["components/Post/styles.js","components/Commit/styles.js","components/Commit/index.js","components/Commits/styles.js","components/Commits/index.js","components/Post/index.js"],"names":["useStyles","makeStyles","root","background","padding","title","textTransform","fontSize","post","margin","lastUpdate","color","paddingRight","display","justifyContent","alignItems","details","flexDirection","content","flex","input","minWidth","borderRadius","Commit","author","id","useState","isOpen","setIsOpen","message","setMessage","localAuthor","setLocalAuthor","classes","useContext","Context","user","deleteCommit","updateCommit","useEffect","isSubscribed","Card","className","TextField","onChange","e","target","value","multiline","rowsMax","CardContent","Typography","component","variant","IconButton","onClick","theme","paper","spacing","overflow","marginTop","Commits","localCommits","setLocalCommits","undefined","localResponse","setLocalResponse","newCommit","setNewCommit","createCommit","a","instance","get","commits","then","response","data","comments","bringUsers","Paper","roles","length","Input","onKeyPress","event","charCode","placeholder","map","commit","_id","key","Post","params","useParams","posts","setPost","setTitle","setContent","setLastUpdate","find","updatedAt","aria-label","align","from","opacity","to","props","style"],"mappings":"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","file":"static/js/8.24d7fc25.chunk.js","sourcesContent":["//import make styles hook\nimport { makeStyles } from '@material-ui/core/styles';\n\n//create the styles and export it\nexport const useStyles = makeStyles({\n\troot: {\n\t\tbackground: 'linear-gradient(to right, #c9d6ff, #e2e2e2)',\n\t\tpadding: '1.5rem',\n\t},\n\ttitle: {\n\t\ttextTransform: 'capitalize',\n\t\t'@media (max-width:600px)': {\n\t\t\tfontSize: '2.5rem',\n\t\t},\n\t},\n\tpost: { fontSize: '1.5rem', margin: '1rem 0' },\n\tlastUpdate: {\n\t\tbackground: 'rgba(0,0,0,.5)',\n\t\tcolor: 'white',\n\t\tpadding: '.2rem',\n\t\tpaddingRight: '.5rem',\n\t},\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'flex-start',\n\t\talignItems: 'center',\n\t\tbackground: 'rgba(0,0,0,.5)',\n\t\tcolor: 'white',\n\t},\n\tdetails: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t},\n\tcontent: {\n\t\tflex: '1 0 auto',\n\t},\n\tinput: {\n\t\tpadding: '.5rem',\n\t\tmargin: '.5em',\n\t\tminWidth: '50vw',\n\t\tbackground: 'white',\n\t\tborderRadius: '.2rem',\n\t},\n}));\n","//import react\nimport React, { useState, useContext, useEffect } from 'react';\n//import material ui components\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n//import input\nimport TextField from '@material-ui/core/TextField';\n//import icons\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CreateIcon from '@material-ui/icons/Create';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CheckIcon from '@material-ui/icons/Check';\n//import styles\nimport { useStyles } from './styles';\n//import context\nimport { Context } from '../../utils/Context';\n\nexport const Commit = ({ content, author, id }) => {\n\t//use local state\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst [message, setMessage] = useState('example');\n\tconst [localAuthor, setLocalAuthor] = useState('');\n\t//use styles\n\tconst classes = useStyles();\n\t//use context\n\tconst { user, deleteCommit, updateCommit } = useContext(Context);\n\t//use effect\n\tuseEffect(() => {\n\t\tlet isSubscribed = true;\n\n\t\tisSubscribed && setMessage(content);\n\t\tisSubscribed && setLocalAuthor(author);\n\n\t\treturn () => (isSubscribed = false);\n\t}, [author, content]);\n\n\treturn (\n\t\t<Card className={classes.root}>\n\t\t\t<div className={classes.details}>\n\t\t\t\t{isOpen ? (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tonChange={(e) => setMessage(e.target.value)}\n\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\tvalue={message}\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trowsMax={5}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<CardContent className={classes.content}>\n\t\t\t\t\t\t<Typography component='h5' variant='body1'>\n\t\t\t\t\t\t\t{message}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{isOpen && user?.id === localAuthor && (\n\t\t\t\t<>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetIsOpen(false);\n\t\t\t\t\t\t\tupdateCommit(id, message);\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t<CheckIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\tonClick={() => setIsOpen((value) => (value = false))}>\n\t\t\t\t\t\t<HighlightOffIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{!isOpen && user?.id === localAuthor && (\n\t\t\t\t<>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\tonClick={() => setIsOpen((value) => (value = true))}>\n\t\t\t\t\t\t<CreateIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<IconButton onClick={() => deleteCommit(id)} color='inherit'>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</Card>\n\t);\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tpadding: theme.spacing(2),\n\t\tdisplay: 'flex',\n\t\toverflow: 'auto',\n\t\tflexDirection: 'column',\n\t\tmarginTop: '1rem',\n\t\tbackground: 'transparent',\n\t},\n\ttitle: {\n\t\tpadding: '1rem 0',\n\t\tcolor: 'white',\n\t},\n\tinput: {\n\t\tpadding: '.5rem',\n\t\tmargin: '.5em',\n\t\tminWidth: '50vw',\n\t\tbackground: 'white',\n\t\tborderRadius: '.2rem',\n\t},\n}));\n","//import react\nimport React, { useState, useEffect, useContext } from 'react';\n//import commit component\nimport { Commit } from '../Commit';\n//import request tools\nimport { instance, commits } from '../../utils/requests';\n//import components\nimport { Input, Paper, Typography } from '@material-ui/core';\n//import context\nimport { Context } from '../../utils/Context';\n//import styles\nimport { useStyles } from './styles';\n\n//create and export commits\nexport const Commits = ({ post }) => {\n\t//use local state\n\tconst [localCommits, setLocalCommits] = useState([]);\n\tconst [localResponse, setLocalResponse] = useState(undefined);\n\tconst [newCommit, setNewCommit] = useState('');\n\t//use styles\n\tconst classes = useStyles();\n\t//use context\n\tconst { createCommit, user } = useContext(Context);\n\n\t//use effect to bring the commits\n\tuseEffect(() => {\n\t\tlet isSubscribed = true;\n\n\t\tconst bringUsers = async () =>\n\t\t\tawait instance\n\t\t\t\t.get(commits(post))\n\t\t\t\t.then((response) => {\n\t\t\t\t\tsetLocalResponse(response);\n\t\t\t\t\treturn response?.data;\n\t\t\t\t})\n\t\t\t\t.then((data) => setLocalCommits(data?.comments));\n\n\t\tisSubscribed && bringUsers();\n\n\t\treturn () => (isSubscribed = false);\n\t}, [post, localResponse]);\n\n\t//handle on key press\n\t/**\n\t *\n\t * @param {event} event\n\t */\n\tconst handleOnKeyPress = (event) => {\n\t\tif (event.charCode === 13) {\n\t\t\tcreateCommit(post, newCommit);\n\n\t\t\t//reset\n\t\t\tsetNewCommit('');\n\t\t}\n\t};\n\n\treturn (\n\t\t<Paper className={classes.paper}>\n\t\t\t<Typography variant='caption' className={classes.title}>\n\t\t\t\tCommits\n\t\t\t</Typography>\n\t\t\t<Paper className={classes.paper}>\n\t\t\t\t{user !== undefined && user?.roles?.length === 1 && (\n\t\t\t\t\t<Input\n\t\t\t\t\t\tonKeyPress={handleOnKeyPress}\n\t\t\t\t\t\tonChange={(e) => setNewCommit(e.target.value)}\n\t\t\t\t\t\tplaceholder='To make a commit, you have to write here! and press enter'\n\t\t\t\t\t\tvalue={newCommit}\n\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</Paper>\n\t\t\t{localCommits?.length > 0 &&\n\t\t\t\tlocalCommits.map((commit) => (\n\t\t\t\t\t<Commit\n\t\t\t\t\t\tcontent={commit?.content}\n\t\t\t\t\t\tauthor={commit?.author}\n\t\t\t\t\t\tid={commit?._id}\n\t\t\t\t\t\tkey={commit?._id}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</Paper>\n\t);\n};\n","//import react and its hooks\nimport React, { useContext, useEffect, useState } from 'react';\n// use params hook\nimport { useParams } from 'react-router-dom';\n//import context\nimport { Context } from '../../utils/Context';\n//import use styles hook\nimport { useStyles } from './styles';\n//import the card component\nimport Card from '@material-ui/core/Card';\n//import card content component\nimport CardContent from '@material-ui/core/CardContent';\n//import typography component\nimport Typography from '@material-ui/core/Typography';\n//use spring animations\nimport { Spring } from 'react-spring/renderprops';\n//import commits\nimport { Commits } from '../Commits';\n\n//create post component and export it\nconst Post = () => {\n\t//use params hook\n\tconst params = useParams();\n\t//use context\n\tconst { posts } = useContext(Context);\n\t//use stat to save the post\n\tconst [post, setPost] = useState(undefined);\n\t//use state to save the title specific post\n\tconst [title, setTitle] = useState('');\n\t//use state to save the content of specific post\n\tconst [content, setContent] = useState('');\n\t//use state for last update\n\tconst [lastUpdate, setLastUpdate] = useState('');\n\n\t//use effect to find the post\n\tuseEffect(() => {\n\t\t//save the post\n\t\tsetPost(posts.find((post) => post._id === params.post));\n\t}, [params.post, post, posts]);\n\n\t//use effect to set the title and the content\n\tuseEffect(() => {\n\t\t//save the title\n\t\tsetTitle(post?.title);\n\t\t//save the content\n\t\tsetContent(post?.content);\n\t\t//save the last update\n\t\tsetLastUpdate(post?.updatedAt);\n\t}, [post]);\n\n\t//use styles\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<>\n\t\t\t<Card aria-label='post' className={classes.root} variant='outlined'>\n\t\t\t\t{/*Card container up*/}\n\t\t\t\t<CardContent aria-label='content of the post'>\n\t\t\t\t\t{/*Card content down*/}\n\t\t\t\t\t{/*title*/}\n\t\t\t\t\t<Typography\n\t\t\t\t\t\taria-label='title of the post'\n\t\t\t\t\t\talign='center'\n\t\t\t\t\t\tclassName={classes.title}\n\t\t\t\t\t\tvariant='h1'>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{/*content with an animation*/}\n\t\t\t\t\t<Spring from={{ opacity: 0 }} to={{ opacity: 1 }}>\n\t\t\t\t\t\t{(props) => (\n\t\t\t\t\t\t\t<div style={props}>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t<Typography\n\t\t\t\t\t\t\t\t\t\taria-label='content of the post'\n\t\t\t\t\t\t\t\t\t\tclassName={classes.post}\n\t\t\t\t\t\t\t\t\t\tvariant='body1'\n\t\t\t\t\t\t\t\t\t\tcomponent='p'>\n\t\t\t\t\t\t\t\t\t\t{content}\n\t\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Spring>\n\t\t\t\t\t{/*last update*/}\n\t\t\t\t\t<Typography\n\t\t\t\t\t\taria-label='last update of the post'\n\t\t\t\t\t\talign='right'\n\t\t\t\t\t\tclassName={classes.lastUpdate}\n\t\t\t\t\t\tvariant='body2'\n\t\t\t\t\t\tcomponent='p'>\n\t\t\t\t\t\tlasted update: {lastUpdate}\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t\t{/*the commits, pass data to the commits*/}\n\t\t\t<Commits post={post?._id} />\n\t\t</>\n\t);\n};\n\nexport default Post;\n"],"sourceRoot":""}