{"version":3,"sources":["components/ListItems/index.js","pages/AdminView/styles.js","components/CreateCategory/styles.js","components/CreateCategory/index.js","components/UpdateCategory/styles.js","components/UpdateCategory/index.js","components/DeleteCategory/styles.js","components/DeleteCategory/index.js","pages/AdminView/index.js"],"names":["MainListItems","setDashboardOption","useContext","Context","ListItem","button","onClick","number","ListItemIcon","ListItemText","primary","useStyles","makeStyles","theme","root","display","background","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","input","fontSize","margin","marginTop","CreateCategory","classes","categoryName","setCategoryName","createNewCategory","setShowError","setError","Typography","FormGroup","aria-label","Input","autoFocus","placeholder","className","value","onChange","e","target","Alert","Button","variant","color","error","UpdateCategory","updateCategory","categoryId","setCategoryId","DeleteCategory","deleteCategory","Dashboard","memo","useState","open","setOpen","dashboardOption","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","component","noWrap","style","textDecoration","to","Drawer","Divider","List","Container","maxWidth","ResponseAlert","Paper","option","handleSwitch"],"mappings":"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","file":"static/js/9.71639493.chunk.js","sourcesContent":["//import react and its hooks\nimport React, { useContext } from 'react';\n//import context\nimport { Context } from '../../utils/Context';\n//import materia ui components and icons\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddIcon from '@material-ui/icons/Add';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport UpdateIcon from '@material-ui/icons/Update';\n\nexport const MainListItems = () => {\n\tconst { setDashboardOption } = useContext(Context);\n\n\treturn (\n\t\t<>\n\t\t\t{/*item for create a category*/}\n\t\t\t<ListItem\n\t\t\t\tbutton\n\t\t\t\tonClick={() => setDashboardOption((number) => (number = 1))}>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<AddIcon />\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText primary='Create Category' />\n\t\t\t</ListItem>\n\t\t\t{/*item for delete category*/}\n\t\t\t<ListItem\n\t\t\t\tbutton\n\t\t\t\tonClick={() => setDashboardOption((number) => (number = 2))}>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<HighlightOffIcon />\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText primary='Delete Category' />\n\t\t\t</ListItem>\n\t\t\t{/*item for update category*/}\n\t\t\t<ListItem\n\t\t\t\tbutton\n\t\t\t\tonClick={() => setDashboardOption((number) => (number = 3))}>\n\t\t\t\t<ListItemIcon>\n\t\t\t\t\t<UpdateIcon />\n\t\t\t\t</ListItemIcon>\n\t\t\t\t<ListItemText primary='Update Category' />\n\t\t\t</ListItem>\n\t\t</>\n\t);\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t\tbackground: 'white',\n\t},\n\ttoolbar: {\n\t\tpaddingRight: 24, // keep right padding when drawer closed\n\t},\n\ttoolbarIcon: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'flex-end',\n\t\tpadding: '0 8px',\n\t\t...theme.mixins.toolbar,\n\t},\n\tappBar: {\n\t\tzIndex: theme.zIndex.drawer + 1,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t},\n\tappBarShift: {\n\t\tmarginLeft: drawerWidth,\n\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\ttransition: theme.transitions.create(['width', 'margin'], {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\tmenuButton: {\n\t\tmarginRight: 36,\n\t},\n\tmenuButtonHidden: {\n\t\tdisplay: 'none',\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t},\n\tdrawerPaper: {\n\t\tposition: 'relative',\n\t\twhiteSpace: 'nowrap',\n\t\twidth: drawerWidth,\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.enteringScreen,\n\t\t}),\n\t},\n\tdrawerPaperClose: {\n\t\toverflowX: 'hidden',\n\t\ttransition: theme.transitions.create('width', {\n\t\t\teasing: theme.transitions.easing.sharp,\n\t\t\tduration: theme.transitions.duration.leavingScreen,\n\t\t}),\n\t\twidth: theme.spacing(7),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: theme.spacing(9),\n\t\t},\n\t},\n\tappBarSpacer: theme.mixins.toolbar,\n\tcontent: {\n\t\tflexGrow: 1,\n\t\theight: '100vh',\n\t\toverflow: 'auto',\n\t},\n\tcontainer: {\n\t\tpaddingTop: theme.spacing(4),\n\t\tpaddingBottom: theme.spacing(4),\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(2),\n\t\tdisplay: 'flex',\n\t\toverflow: 'auto',\n\t\tflexDirection: 'column',\n\t},\n\tfixedHeight: {\n\t\theight: 240,\n\t},\n}));\n","//import make styles from styed component\nimport { makeStyles } from '@material-ui/core/styles';\n\n//custom styles from the modal component and export it\nexport const useStyles = makeStyles((theme) => ({\n\tinput: {\n\t\tfontSize: '2rem !important',\n\t\tmargin: '1rem 0',\n\t},\n\tbutton: {\n\t\tmarginTop: '1rem !important',\n\t},\n}));\n","//import react and its hooks\nimport React, { useContext } from 'react';\n//import Typography\nimport { Button, FormGroup, Input, Typography } from '@material-ui/core';\n//import context\nimport { Context } from '../../utils/Context';\n//import alert component\nimport { Alert } from '../Alert';\n//import styles\nimport { useStyles } from './styles';\n\n//create and export component\nexport const CreateCategory = () => {\n\t//use custom hooks from material ui\n\tconst classes = useStyles();\n\n\t//use context hooks\n\tconst {\n\t\tcategoryName,\n\t\tsetCategoryName,\n\t\tcreateNewCategory,\n\t\tsetShowError,\n\t\tsetError,\n\t} = useContext(Context);\n\n\t//handle the click event\n\tconst handleOnClick = () => {\n\t\t//set the login\n\t\tsetCategoryName(categoryName);\n\t\t//check if the input is empty\n\t\tif (categoryName === '') {\n\t\t\tsetError((error) => (error = 'please check the inputs'));\n\t\t\tsetShowError(true);\n\t\t} else {\n\t\t\tsetShowError(false);\n\t\t\tcreateNewCategory();\n\t\t}\n\t\t//reset local state\n\t\tsetCategoryName('');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Typography>Create new category</Typography>\n\t\t\t<FormGroup aria-label='form group'>\n\t\t\t\t{/*Inputs (control it)*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the name of the new category'\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tplaceholder='category name'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={categoryName}\n\t\t\t\t\tonChange={(e) => setCategoryName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Alert />\n\t\t\t\t<Button\n\t\t\t\t\taria-label='button to create new category'\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tonClick={handleOnClick}>\n\t\t\t\t\tCreate!\n\t\t\t\t</Button>\n\t\t\t</FormGroup>\n\t\t</>\n\t);\n};\n","//import make styles from styed component\nimport { makeStyles } from '@material-ui/core/styles';\n\n//custom styles from the modal component and export it\nexport const useStyles = makeStyles((theme) => ({\n\tinput: {\n\t\tfontSize: '2rem !important',\n\t\tmargin: '1rem 0',\n\t},\n\tbutton: {\n\t\tmarginTop: '1rem !important',\n\t},\n}));\n","//import react and its hooks\nimport React, { useContext } from 'react';\n//import Typography\nimport { Button, FormGroup, Input, Typography } from '@material-ui/core';\n//import context\nimport { Context } from '../../utils/Context';\n//import alert component\nimport { Alert } from '../Alert';\n//import styles\nimport { useStyles } from './styles';\n\n//create and export component\nexport const UpdateCategory = () => {\n\t//use custom hooks from material ui\n\tconst classes = useStyles();\n\t//use context hooks\n\tconst {\n\t\tcategoryName,\n\t\tsetCategoryName,\n\t\tupdateCategory,\n\t\tsetShowError,\n\t\tsetError,\n\t\tcategoryId,\n\t\tsetCategoryId,\n\t} = useContext(Context);\n\n\t//handle the click event\n\tconst handleOnClick = () => {\n\t\t//set the data\n\t\tsetCategoryId(categoryId);\n\t\tsetCategoryName(categoryName);\n\t\t//check if the input is empty\n\t\tif (categoryName === '' || categoryId === '') {\n\t\t\tsetError((error) => (error = 'please check the inputs'));\n\t\t\tsetShowError(true);\n\t\t} else {\n\t\t\tsetShowError(false);\n\t\t\tupdateCategory();\n\t\t}\n\t\t//reset local state\n\t\tsetCategoryName('');\n\t\tsetCategoryId('');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Typography>Update category</Typography>\n\t\t\t<FormGroup aria-label='form group'>\n\t\t\t\t{/*category id*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the id of the category'\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tplaceholder='category id'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={categoryId}\n\t\t\t\t\tonChange={(e) => setCategoryId(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t{/*category name*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the name of the category'\n\t\t\t\t\tplaceholder='category name'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={categoryName}\n\t\t\t\t\tonChange={(e) => setCategoryName(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Alert />\n\t\t\t\t<Button\n\t\t\t\t\taria-label='button to make update'\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tonClick={handleOnClick}>\n\t\t\t\t\tUpdate!\n\t\t\t\t</Button>\n\t\t\t</FormGroup>\n\t\t</>\n\t);\n};\n","//import make styles from styed component\nimport { makeStyles } from '@material-ui/core/styles';\n\n//custom styles from the modal component and export it\nexport const useStyles = makeStyles((theme) => ({\n\tinput: {\n\t\tfontSize: '2rem !important',\n\t\tmargin: '1rem 0',\n\t},\n\tbutton: {\n\t\tmarginTop: '1rem !important',\n\t},\n}));\n","//import react and its hooks\nimport React, { useContext } from 'react';\n//import Typography\nimport { Button, FormGroup, Input, Typography } from '@material-ui/core';\n//import context\nimport { Context } from '../../utils/Context';\n//import alert component\nimport { Alert } from '../Alert';\n//import styles\nimport { useStyles } from './styles';\n\n//create and export component\nexport const DeleteCategory = () => {\n\t//use custom hooks from material ui\n\tconst classes = useStyles();\n\t//use context hooks\n\tconst {\n\t\tdeleteCategory,\n\t\tsetShowError,\n\t\tsetError,\n\t\tcategoryId,\n\t\tsetCategoryId,\n\t} = useContext(Context);\n\n\t//handle the click event\n\tconst handleOnClick = () => {\n\t\t//set the data\n\t\tsetCategoryId(categoryId);\n\t\t//check if the input is empty\n\t\tif (categoryId === '') {\n\t\t\tsetError((error) => (error = 'please check the inputs'));\n\t\t\tsetShowError(true);\n\t\t} else {\n\t\t\tsetShowError(false);\n\t\t\tdeleteCategory();\n\t\t}\n\t\t//reset local state\n\t\tsetCategoryId('');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Typography>Delete category</Typography>\n\t\t\t<FormGroup aria-label='form group'>\n\t\t\t\t{/*category id*/}\n\t\t\t\t<Input\n\t\t\t\t\taria-label='input for the id of the category'\n\t\t\t\t\tautoFocus={true}\n\t\t\t\t\tplaceholder='category id'\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\tvalue={categoryId}\n\t\t\t\t\tonChange={(e) => setCategoryId(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<Alert />\n\t\t\t\t<Button\n\t\t\t\t\taria-label='button to make update'\n\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\tvariant='outlined'\n\t\t\t\t\tcolor='secondary'\n\t\t\t\t\tonClick={handleOnClick}>\n\t\t\t\t\tDelete!\n\t\t\t\t</Button>\n\t\t\t</FormGroup>\n\t\t</>\n\t);\n};\n","//import react and its hooks\nimport React, { useContext, useState, memo } from 'react';\nimport clsx from 'clsx';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n//import drawer\nimport Drawer from '@material-ui/core/Drawer';\n//import app bar\nimport AppBar from '@material-ui/core/AppBar';\n//import toolbar\nimport Toolbar from '@material-ui/core/Toolbar';\n//import list\nimport List from '@material-ui/core/List';\n//import typo\nimport Typography from '@material-ui/core/Typography';\n//import divider\nimport Divider from '@material-ui/core/Divider';\n//import icon button\nimport IconButton from '@material-ui/core/IconButton';\n//import container\nimport Container from '@material-ui/core/Container';\n//import menu icon\nimport MenuIcon from '@material-ui/icons/Menu';\n//import chevron left icon\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n//import list of items\nimport { MainListItems } from '../../components/ListItems';\n//import styles\nimport { useStyles } from './styles';\n//import create category component\nimport { CreateCategory } from '../../components/CreateCategory';\n//import paper\nimport { Paper } from '@material-ui/core';\n//import the context\nimport { Context } from '../../utils/Context';\n//import response alert\nimport { ResponseAlert } from '../../components/ResponseAlert';\n//import update category component\nimport { UpdateCategory } from '../../components/UpdateCategory';\n//import delete category\nimport { DeleteCategory } from '../../components/DeleteCategory';\n//import link\nimport { Link } from 'react-router-dom';\n\nexport const Dashboard = memo(() => {\n\t//use styles\n\tconst classes = useStyles();\n\t//use local style\n\tconst [open, setOpen] = useState(true);\n\t//use context\n\tconst { dashboardOption } = useContext(Context);\n\n\t//handle the open of the menu\n\tconst handleDrawerOpen = () => {\n\t\tsetOpen(true);\n\t};\n\t//handle the close of the menu\n\tconst handleDrawerClose = () => {\n\t\tsetOpen(false);\n\t};\n\n\t//handle the switch\n\t/**\n\t * @description this function allow to handle the component to display\n\t * @param {number} option\n\t */\n\tconst handleSwitch = (option) => {\n\t\tswitch (option) {\n\t\t\tcase 1:\n\t\t\t\treturn <CreateCategory />;\n\t\t\tcase 2:\n\t\t\t\treturn <DeleteCategory />;\n\t\t\tcase 3:\n\t\t\t\treturn <UpdateCategory />;\n\t\t\tdefault:\n\t\t\t\treturn <></>;\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t{/**base styles*/}\n\t\t\t<CssBaseline />\n\t\t\t{/** app bar*/}\n\t\t\t<AppBar\n\t\t\t\tposition='absolute'\n\t\t\t\tclassName={clsx(classes.appBar, open && classes.appBarShift)}>\n\t\t\t\t{/**tool bar */}\n\t\t\t\t<Toolbar className={classes.toolbar}>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\taria-label='open drawer'\n\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\tclassName={clsx(\n\t\t\t\t\t\t\tclasses.menuButton,\n\t\t\t\t\t\t\topen && classes.menuButtonHidden,\n\t\t\t\t\t\t)}>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t{/**typography */}\n\t\t\t\t\t<Typography\n\t\t\t\t\t\taria-label='text of nav bar'\n\t\t\t\t\t\tcomponent='h1'\n\t\t\t\t\t\tvariant='h6'\n\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\tnoWrap\n\t\t\t\t\t\tclassName={classes.title}>\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\taria-label='link to back to home'\n\t\t\t\t\t\t\tstyle={{ textDecoration: 'none', color: 'inherit' }}\n\t\t\t\t\t\t\tto='/'>\n\t\t\t\t\t\t\tDashboard Foro App\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t{/** drawer fot the menu*/}\n\t\t\t<Drawer\n\t\t\t\tvariant='permanent'\n\t\t\t\tclasses={{\n\t\t\t\t\tpaper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n\t\t\t\t}}\n\t\t\t\topen={open}>\n\t\t\t\t<div className={classes.toolbarIcon}>\n\t\t\t\t\t<IconButton onClick={handleDrawerClose}>\n\t\t\t\t\t\t<ChevronLeftIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</div>\n\t\t\t\t<Divider />\n\t\t\t\t<List>\n\t\t\t\t\t<MainListItems />\n\t\t\t\t</List>\n\t\t\t\t<Divider />\n\t\t\t</Drawer>\n\t\t\t{/**main content*/}\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.appBarSpacer} />\n\t\t\t\t{/**container */}\n\t\t\t\t<Container\n\t\t\t\t\taria-label='Container'\n\t\t\t\t\tmaxWidth='lg'\n\t\t\t\t\tclassName={classes.container}>\n\t\t\t\t\t<ResponseAlert />\n\t\t\t\t\t<Paper className={classes.paper}></Paper>\n\t\t\t\t\t{/**switch to handle the component ti display it */}\n\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t{handleSwitch(dashboardOption)}\n\t\t\t\t\t</Paper>\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t</div>\n\t);\n});\n\nexport default Dashboard;\n"],"sourceRoot":""}